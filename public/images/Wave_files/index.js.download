(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
// Generated by LiveScript 1.3.0
(function(){
  var ret;
  ret = {
    id: 'wave',
    type: 'background',
    name: 'Wave',
    desc: "Beautiful, smooth gradient waves in multiple layers flowing slowly and gracefully.",
    tags: ['wave', 'tide', 'sea', 'sine', 'water', 'flow', 'liquid', 'gradient'],
    slug: "flow-liquid-water-svg-background",
    init: function(){},
    config: {},
    license: 'by',
    edit: {
      count: {
        name: "Layer",
        type: 'number',
        'default': 5,
        min: 1,
        max: 10
      },
      peak: {
        name: "Peak",
        type: 'number',
        'default': 5,
        min: 2,
        max: 20
      },
      c1: {
        name: "Start",
        type: 'color',
        'default': '#f0f'
      },
      c2: {
        name: "End",
        type: 'color',
        'default': '#0ff'
      },
      opacity: {
        name: "Opacity",
        type: 'number',
        'default': 0.4,
        min: 0.1,
        max: 0.9,
        step: 0.01,
        priority: 3.1
      },
      speed: {
        'default': 0.1
      },
      background: {
        'default': '#fff'
      },
      palette: {
        'default': {
          colors: ['#f0f', '#0ff']
        }
      },
      dy: {
        type: 'number',
        name: "Slope",
        min: 0,
        max: 1,
        'default': 0.13,
        step: 0.01
      },
      scale: {
        type: 'number',
        name: "Scale",
        min: 0,
        max: 1,
        'default': 0.11,
        step: 0.01
      },
      offset: {
        type: 'number',
        name: "Offset",
        min: 0,
        max: 1,
        'default': 0.5,
        step: 0.01
      },
      transparent: {
        hidden: false
      }
    },
    postdom: function(config, root){},
    dom: function(config){
      var svg, width, height, getd, id, dur, i$, to$, i, begin, ds, vs;
      svg = "";
      width = config.width, height = config.height;
      getd = function(){
        var pathd, count, range, delta, offset, dy, i$, i, x, delta2, ox, y;
        pathd = "M0 0";
        count = config.peak;
        range = (5 + Math.random() * 1) * config.scale * height * 0.3;
        delta = 10 + Math.random() * 20;
        offset = height * (0.5 + config.offset) - range;
        dy = -(4 + Math.random() * 1) * config.dy * offset;
        for (i$ = 0; i$ <= count; ++i$) {
          i = i$;
          x = width * i / count;
          delta2 = delta * (Math.random() * 0.4 + 0.8);
          ox = i ? width * (i - 1) / 4 : x;
          y = Math.random() * range + offset + i * dy / count;
          if (!i) {
            pathd += "L " + x + " " + y;
          } else if (i === 1) {
            pathd += "Q " + (ox + x) / 2 + " " + (y + delta2 * (1 + i % 2 - 0.5)) + "  " + x + " " + y;
          } else {
            pathd += "T " + x + " " + y;
          }
        }
        pathd += "L " + width + " 0 Z";
        return pathd;
      };
      id = "lg-" + Math.random();
      dur = 1 / config.speed;
      svg = "<linearGradient id=\"" + id + "\" x1=\"0\" x2=\"1\" y1=\"0\" y2=\"0\">\n  <stop stop-color=\"" + config.c1 + "\" offset=\"0\"/>\n  <stop stop-color=\"" + config.c2 + "\" offset=\"1\"/>\n</linearGradient>";
      for (i$ = 0, to$ = config.count; i$ < to$; ++i$) {
        i = i$;
        begin = -i * dur / config.count;
        ds = [0, 1, 2].map(fn$);
        vs = [ds[0], ds[1], ds[2], ds[0]].join(';');
        svg += "<path d=\"\" fill=\"url(#" + id + ")\" opacity=\"" + config.opacity + "\">\n  <animate attributeName=\"d\" dur=\"" + dur + "s\" repeatCount=\"indefinite\"\n  keyTimes=\"0;0.333;0.667;1\" calcMod=\"spline\" keySplines=\"0.2 0 0.2 1;0.2 0 0.2 1;0.2 0 0.2 1\"\n  begin=\"" + begin + "s\" values=\"" + vs + "\"/>\n</path>";
      }
      return svg;
      function fn$(){
        return getd();
      }
    },
    watch: function(n, o){},
    step: function(){}
  };
  if (typeof module != 'undefined' && module !== null) {
    module.exports = ret;
  }
  if (typeof ModManager != 'undefined' && ModManager !== null) {
    ModManager.register(ret);
  }
  return ret;
})();
},{}]},{},[1]);
